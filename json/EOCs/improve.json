[
  {
    "id": "Proficiencies_EOC_IMPROVE",
    "type": "effect_on_condition",

    "//notes": [
      "recheck type after each trigger in order to be able to handle overflow or be able to switch immediately"
    ],

    "effect": [
      {
        "set_string_var": "proficiency_<u_val:proficiency_current_platform>_<u_val:proficiency_target_grade>",
        "target_var": { "context_val": "proficiency" },
        "parse_tags": true
      },
      {
      },

      { "math": ["_new_progress", "=", "get_new_progress()"] },
      {
        "math": [
          "_total_progress",
          "=",
          "u_proficiency(_proficiency, 'format': 'time_spent') + _new_progress"
        ]
      },
      {
        "math": [
          "u_proficiency(_proficiency, 'format': 'time_spent')",
          "=",
          "_total_progress"
        ]
      },
      {
        "//run_eocs": "run target/current type check again to see if, with the update to the proficiency progress, we now need to target a different type",
        "run_eocs": "Proficiencies_EOC_GET_PROFICIENCY_GRADE"
      },
      {
        "if": {
          "math": [
            "_total_progress",
            ">",
            "u_proficiency(_proficiency, 'format': 'total_time_required')"
          ]
        },
        "then": [
          {
            "math": [
              "_progress_overflow",
              "=",
              "_total_progress - u_proficiency(_proficiency, 'format': 'total_time_required')"
            ]
          },
          {
            "set_string_var": "proficiency_<u_val:proficiency_current_platform>_<u_val:proficiency_target_grade>",
            "target_var": { "context_val": "proficiency" },
            "parse_tags": true
          },
          {
            "math": [
              "u_proficiency(_proficiency, 'format': 'time_spent')",
              "+=",
              "_progress_overflow"
            ]
          }
        ]
      }
    ]
  }
]
